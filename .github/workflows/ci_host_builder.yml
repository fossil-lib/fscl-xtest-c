name: CI System Tester

on:
  pull_request:
    branches:
      - "main"
    paths:
      - "**.c"
      - "**.h"
      - "**.txt"
      - "**.yaml"
      - "**.build"

permissions:
  contents: read

#
# Full-on DevOps pipline for testing on mock host systems
# from Windwos, Max OS, and Linux systems.
# 
jobs:
  host_macosx:
    strategy:
      matrix:
        os: [10.15, 11, 12, 13]  # macOS versions
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: x64
    - name: Install Meson Build System
      run: |
          pip install meson==1.0.0 ninja==1.11.1 scan-build
          brew install cppcheck
    - name: Setup Build Directory
      run: |
            scan-build meson setup builddir -Dwith_tests=enabled
    - name: Scan Compile Commands
      run: |
            cppcheck --project=builddir/compile_commands.json
    - name: Compile Source Code
      run: |
            scan-build meson compile -C builddir -v
    - name: Test Project Code
      run: |
            scan-build meson test -C builddir -v
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: MacOSX_${{ matrix.os }}_Meson_Testlog
        path: builddir/meson-logs/testlog.txt

  host_windows:
    strategy:
      matrix:
        os: ['windows-latest', 'windows-2022']
        mingw: [false, 'mingw32', 'mingw64', 'MSYS']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: x64
    - name: Setup MinGW/MSYS
      if: matrix.mingw != false
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.mingw }}
        update: true
    - name: Install Meson Build System
      run: |
          pip install meson==1.0.0 ninja==1.11.1
    - name: Setup Build Directory
      run: |
            meson setup builddir -Dwith_tests=enabled
    - name: Compile Source Code
      run: |
            meson compile -C builddir -v
    - name: Test Project Code
      run: |
            meson test -C builddir -v
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: ${{ matrix.mingw }}_Meson_Testlog
        path: builddir/meson-logs/testlog.txt

  host_ubuntu:
    strategy:
      matrix:
        ubuntu_version: ['latest', '22.04', '20.04']
    runs-on: ubuntu-${{ matrix.ubuntu_version }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: x64
    - name: Install Meson Build System
      run: |
          pip install meson==1.0.0 ninja==1.11.1 scan-build
          sudo apt-get install -y cppcheck gcc
    - name: Setup Build Directory
      run: |
            scan-build meson setup builddir -Dwith_tests=enabled
    - name: Scan Compile Commands
      run: |
            cppcheck --project=builddir/compile_commands.json
    - name: Compile Source Code
      run: |
            scan-build meson compile -C builddir
    - name: Test Project Code
      run: |
            scan-build meson test -C builddir -v
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: Ubuntu_${{ matrix.ubuntu_version }}_Meson_Testlog
        path: builddir/meson-logs/testlog.txt